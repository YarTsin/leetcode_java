Подходы к решению

1. Грубая сила (Brute Force)
Перебираем все возможные пары чисел в массиве
Проверяем их сумму
Сложность O(n²), память O(1)

2. Оптимальное решение с хеш-таблицей
Используем HashMap для хранения чисел и их индексов
Проходим по массиву один раз
Для каждого элемента вычисляем complement = target - текущее число
Если complement есть в HashMap - нашли решение
Сложность O(n), память O(n)

=============

Пояснение кода
HashMap (numToIndex):
Ключ: число из массива
Значение: индекс этого числа
Позволяет быстро проверять, встречалось ли нам нужное число ранее

Основной цикл:
Проходим по всем элементам массива
Для каждого числа вычисляем complement - число, которое в сумме с текущим даст target
Проверяем, есть ли complement в нашей хеш-таблице
Если есть - возвращаем индексы
Если нет - добавляем текущее число в таблицу

Преимущества:
Только один проход по массиву (O(n) времени)
Использует дополнительную память (O(n)) для хранения чисел

==============

Пример работы
Для nums = [2,7,11,15], target = 9:
Первая итерация (число 2):
complement = 9 - 2 = 7
7 нет в таблице
Добавляем (2 → 0)

Вторая итерация (число 7):
complement = 9 - 7 = 2
2 есть в таблице (индекс 0)
Возвращаем [0, 1]


