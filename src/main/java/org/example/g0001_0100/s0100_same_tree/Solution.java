package org.example.g0001_0100.s0100_same_tree;

/**
 * #Easy #DFS #BFS #Tree #BinaryTree #Recursion
 * Условие: Даны корни двух бинарных деревьев.
 * Необходимо определить, являются ли они одинаковыми.
 * Требования:
 * Два дерева считаются одинаковыми, если они структурно идентичны и узлы имеют одинаковые значения
 * Деревья могут содержать до 100 узлов
 * Значения узлов находятся в диапазоне [-100, 100]
 * (примеры внизу)
 *
 * Мне кажется это хорошие базовые задания для понимания деревьев
 *
 * Решение самое быстрое - 1 мs
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        // Базовые случаи
        if (p == null && q == null) {
            return true; // Оба узла null - деревья одинаковы
        }
        if (p == null || q == null) {
            return false; // Один узел null, другой нет - разные
        }
        if (p.val != q.val) {
            return false; // Значения узлов разные
        }

        // Рекурсивно проверяем левые и правые поддеревья
        return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);
    }
}

/*
Пример 1
Вход:

Дерево 1:    1    Дерево 2:   1
            / \              / \
           2   3            2   3

Выход: true

Пример 2
Вход:
Дерево 1:    1    Дерево 2:   1
            /                  \
           2                    2

Выход: false

Пример 3
Вход:
Дерево 1:    1    Дерево 2:   1
            / \              / \
           2   1            1   2

Выход: false




 */