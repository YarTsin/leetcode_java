Объяснение подходов
Итеративный подход (самый эффективный)
Фиктивный узел: Создаем временный узел для упрощения логики добавления элементов
Поэлементное сравнение: Сравниваем текущие элементы обоих списков
и добавляем меньший в результат
Добавление остатков: После завершения одного из списков добавляем
все оставшиеся элементы другого списка

Рекурсивный подход
Базовые случаи: Если один список пуст, возвращаем другой
Рекурсивное слияние: Выбираем меньший узел и рекурсивно
объединяем его следующий элемент с другим списком
Построение результата: Возвращаем выбранный узел с прикрепленным
результатом рекурсивного вызова

Преимущества итеративного подхода:
Константное использование памяти
Нет риска переполнения стека для больших списков
Более понятная логика для большинства разработчиков