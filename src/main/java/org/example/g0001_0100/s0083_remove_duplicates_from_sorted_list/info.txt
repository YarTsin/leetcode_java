Объяснение подходов
Итеративный подход (самый эффективный)
Инициализация: Начинаем с головного узла
Поиск дубликатов: Сравниваем текущий узел со следующим узлом
Удаление дубликатов: Если значения совпадают, "пропускаем" следующий узел,
перенаправляя указатель
Продолжение итерации: Если значения разные, переходим к следующему узлу


Рекурсивный подход
Базовый случай: Пустой список или список из одного элемента возвращаем как есть
Рекурсивная обработка: Обрабатываем остаток списка рекурсивно
Удаление дубликатов: Сравниваем текущий узел с уже обработанным остатком списка

Преимущества итеративного подхода:
Константное использование памяти (O(1))
Нет риска переполнения стека для больших списков
Более простая и понятная логика
Лучшая производительность


Ключевые моменты:
Список отсортирован, поэтому все дубликаты расположены последовательно
Не нужно создавать новый список - работаем с существующими узлами
Важно правильно обрабатывать указатели next для сохранения связности списка


Оба решения корректно работают и принимаются leetcode,
но итеративное решение предпочтительнее из-за лучшей эффективности
по памяти и отсутствия риска переполнения стека.