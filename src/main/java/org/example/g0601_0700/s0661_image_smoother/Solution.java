package org.example.g0601_0700.s0661_image_smoother;

// #Easy #Array #Matrix

/**
 * 661. Image Smoother
 * Дан двумерный целочисленный массив img (изображение),
 * представляющий собой матрицу размером m x n.
 * Необходимо применить к изображению "сглаживающий"
 * фильтр и вернуть результат.
 *
 * Для каждой ячейки изображения вычисляется среднее значение
 * из самой ячейки и всех 8 соседних ячеек (если они существуют),
 * округленное вниз до целого числа.
 *
 * Правила сглаживания:
 * Для каждой ячейки (i, j) рассматривается область 3x3 с центром в (i, j)
 * Учитываются только существующие ячейки (в пределах границ изображения)
 * Среднее значение вычисляется как сумма всех допустимых ячеек,
 * деленная на их количество
 * Результат округляется вниз до целого числа
 * todo запутанное условие
 * (примеры внизу)
 *
 * Решение - определение направления - не быстрое решение - 7 ms
 *
 * Сложность:
 * Временная: O(m * n * 9) = O(m * n) - где m и n размеры изображения
 * Пространственная: O(m * n) - для хранения результата
 */
class Solution {
    public int[][] imageSmoother(int[][] img) {
        int rows = img.length;
        int cols = img[0].length;
        int[][] result = new int[rows][cols];

        // Определяем направления для 8 соседей и центральной ячейки
        int[][] directions = {
                {-1, -1}, {-1, 0}, {-1, 1},
                {0, -1},  {0, 0},  {0, 1},
                {1, -1},  {1, 0},  {1, 1}
        };

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                int sum = 0;
                int count = 0;

                // Проверяем всех 8 соседей + текущую ячейку
                for (int[] dir : directions) {
                    int newRow = i + dir[0];
                    int newCol = j + dir[1];

                    // Проверяем, находится ли сосед в пределах изображения
                    if (newRow >= 0 && newRow < rows && newCol >= 0 && newCol < cols) {
                        sum += img[newRow][newCol];
                        count++;
                    }
                }

                // Вычисляем среднее значение и округляем вниз
                result[i][j] = sum / count;
            }
        }

        return result;
    }
}
/*
Пример 1
Вход: img = [[1,1,1],[1,0,1],[1,1,1]]
Выход: [[0,0,0],[0,0,0],[0,0,0]]

Объяснение:
Для центральной ячейки (1,1):
(1+1+1+1+0+1+1+1+1) / 9 = 8/9 ≈ 0.888 → округляется до 0
Для угловых ячеек учитывается только 4 соседа

Пример 2
Вход: img = [[100,200,100],[200,50,200],[100,200,100]]
Выход: [[137,141,137],[141,138,141],[137,141,137]]

Объяснение:
Центральная ячейка: (100+200+100+200+50+200+100+200+100)/9 = 1250/9 ≈ 138.888 → 138

 */