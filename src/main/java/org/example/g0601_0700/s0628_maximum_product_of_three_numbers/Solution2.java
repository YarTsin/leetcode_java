package org.example.g0601_0700.s0628_maximum_product_of_three_numbers;

import java.util.Arrays;

/**
 * Решение с применением сортировки
 */
class Solution2 {
    public int maximumProduct(int[] nums) {
        // Сортируем массив для удобства доступа к минимальным и максимальным элементам
        Arrays.sort(nums);

        int n = nums.length;

        // Рассчитываем оба возможных варианта максимального произведения
        int option1 = nums[n-1] * nums[n-2] * nums[n-3]; // три самых больших числа
        int option2 = nums[0] * nums[1] * nums[n-1];     // два самых маленьких и одно самое большое

        // Возвращаем максимальное из двух вариантов
        return Math.max(option1, option2);
    }
}
/*
Сначала сортируем массив, чтобы легко получить доступ к самым большим и самым маленьким элементам.
Вычисляем произведение трех самых больших чисел (option1).
Вычисляем произведение двух самых маленьких чисел (которые могут быть отрицательными) и самого большого числа (option2).
Возвращаем максимальное из этих двух значений.
Временная сложность: O(n log n) из-за сортировки.
Пространственная сложность: O(1) - используем константное количество дополнительной памяти.
 */
