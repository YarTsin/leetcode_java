package org.example.g0601_0700.s0696_count_binary_substrings;

// #Easy #String #Two_Pointers

/**
 * 696. Count Binary Substrings
 *
 * Дана строка s, состоящая только из символов '0' и '1'.
 * Необходимо подсчитать количество подстрок, которые имеют
 * одинаковое количество нулей и единиц, и при этом все нули
 * и все единицы в подстроке сгруппированы вместе.
 *
 * Другими словами: Подстрока должна состоять из одной или
 * нескольких групп одинаковых символов, и количество нулей
 * и единиц в подстроке должно быть равным.
 *
 * Пример 1
 * Вход: s = "00110011" * Выход: 6
 * Объяснение:
 * Есть 6 подстрок, которые удовлетворяют условиям:
 * "0011", "01", "1100", "10", "0011", "01"
 * Обратите внимание, что некоторые подстроки повторяются в разных позициях.
 *
 * Пример 2
 * Вход: s = "10101" * Выход: 4
 * Объяснение:
 * Подстроки: "10", "01", "10", "01"
 *
 * Решение - группировка и подсчет - небыстрое решение - 10 ms
 *
 * Сложность:
 * Временная: O(n) - два прохода по строке
 * Пространственная: O(n) - для хранения групп
 *
 *
 */
class Solution {
    public int countBinarySubstrings(String s) {
        int[] groups = new int[s.length()];
        int groupIndex = 0;
        groups[0] = 1;

        // Группируем последовательные одинаковые символы
        for (int i = 1; i < s.length(); i++) {
            if (s.charAt(i) != s.charAt(i - 1)) {
                groupIndex++;
                groups[groupIndex] = 1;
            } else {
                groups[groupIndex]++;
            }
        }

        int count = 0;
        // Для каждой пары соседних групп, добавляем минимум их длин
        for (int i = 1; i <= groupIndex; i++) {
            count += Math.min(groups[i - 1], groups[i]);
        }

        return count;
    }
}