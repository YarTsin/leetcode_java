package org.example.g1201_1300.s1299_replace_elements_with_greatest_element_on_right_side;

// #Easy #Array

/**
 * 1299. Replace Elements with Greatest Element on Right Side
 *
 * Дан массив arr. Нужно заменить каждый элемент значением
 * наибольшего элемента среди тех, которые находятся справа
 * от него, а последний элемент заменить на -1.
 * (примеры внизу)
 *
 * Решение - Проход по массиву справа налево
 * с отслеживанием максимального элемента.
 * Самое быстрое - 2 ms
 */
class Solution {
    public int[] replaceElements(int[] arr) {
        int length = arr.length;

        // Обрабатываем случай массива из одного элемента
        if (length == 1) {
            return new int[]{-1};
        }

        int currentMax = -1; // Начинаем с -1 для последнего элемента

        // Проходим по массиву справа налево
        for (int i = length - 1; i >= 0; i--) {
            int currentElement = arr[i]; // Сохраняем текущий элемент

            // Заменяем текущий элемент текущим максимумом
            arr[i] = currentMax;

            // Обновляем максимум для следующей итерации
            if (currentElement > currentMax) {
                currentMax = currentElement;
            }
        }

        return arr;
    }
}
/*
Пример 1
Вход: arr = [17,18,5,4,6,1]
Процесс:
- Элемент 17: наибольший справа - 18,5,4,6,1 → 18
- Элемент 18: наибольший справа - 5,4,6,1 → 6
- Элемент 5: наибольший справа - 4,6,1 → 6
- Элемент 4: наибольший справа - 6,1 → 6
- Элемент 6: наибольший справа - 1 → 1
- Элемент 1: нет элементов справа → -1

Выход: [18,6,6,6,1,-1]

 */