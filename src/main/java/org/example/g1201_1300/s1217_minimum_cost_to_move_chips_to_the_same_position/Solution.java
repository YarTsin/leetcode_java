package org.example.g1201_1300.s1217_minimum_cost_to_move_chips_to_the_same_position;

// #Easy #Array #Math #Greedy

/**
 * 1217. Minimum Cost to Move Chips to The Same Position
 *
 * Условие: Есть n фишек, расположенных на различных позициях.
 * Каждая фишка находится на некоторой позиции. Фишки можно перемещать
 * с определенной стоимостью:
 * Перемещение фишки на 2 позиции (вперед или назад) стоит 0
 * Перемещение фишки на 1 позицию (вперед или назад) стоит 1
 *
 * Необходимо найти минимальную стоимость для перемещения всех фишек
 * на одну и ту же позицию.
 *
 * Пример 1.
 * Вход: position = [1,2,3]
 * Выход: 1
 * Объяснение:
 * Первый вариант: переместить фишку из позиции 3 в позицию 1 за стоимость 0 (через позицию 2)
 * Второй вариант: переместить фишку из позиции 2 в позицию 1 за стоимость 1
 * Итоговая стоимость: 1
 *
 * Пример 2
 * Вход: position = [2,2,2,3,3]
 * Выход: 1
 * Объяснение: Можно переместить две фишки из позиции 3 в позицию 2 за стоимость 1 каждую
 *
 * Пример 3
 * Вход: position = [1,1000000000]
 * Выход: 1
 * Объяснение: Фишку из позиции 1000000000 можно переместить в позицию 1 за минимальную стоимость 1
 *
 * Это самое быстрое решение - 0 ms
 *
 */
class Solution {
    public int minCostToMoveChips(int[] position) {
        int evenCount = 0; // Количество фишек на четных позициях
        int oddCount = 0;  // Количество фишек на нечетных позициях

        for (int pos : position) {
            if (pos % 2 == 0) {
                evenCount++;
            } else {
                oddCount++;
            }
        }

        // Минимальная стоимость - это минимум между:
        // 1) Стоимостью перемещения всех фишек с нечетных позиций на четные
        // 2) Стоимостью перемещения всех фишек с четных позиций на нечетные
        return Math.min(evenCount, oddCount);
    }
}
/*
Математический анализ задачи
Ключевые наблюдения:
Перемещение на четное расстояние (2, 4, 6, ... позиций) стоит 0
Перемещение на нечетное расстояние (1, 3, 5, ... позиций) стоит 1
Любое перемещение можно представить как серию перемещений на 2 позиции (бесплатно) и одно перемещение на 1 позицию (стоимость 1) если нужно
По сути, стоимость перемещения фишки с позиции a на позицию b равна |a - b| % 2 (0 если разность четная, 1 если нечетная)

Логика решения:
Группируем фишки по четности позиций - все фишки либо на четных, либо на нечетных позициях
Все фишки на одной четности можно собрать в одной точке бесплатно (перемещая на 2 позиции за раз)
Фишки на другой четности нужно переместить на 1 позицию, что стоит 1 за каждую фишку
Минимальная стоимость - это минимум между количеством фишек на четных и нечетных позициях

Почему это работает:
Если собираем все фишки на четных позициях: стоимость = количеству фишек на нечетных позициях
Если собираем все фишки на нечетных позициях: стоимость = количеству фишек на четных позициях
Выбираем вариант с минимальной стоимостью

Сложность: O(n), где n - количество фишек
 */
