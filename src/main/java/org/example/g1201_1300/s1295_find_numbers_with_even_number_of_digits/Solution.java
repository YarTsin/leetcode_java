package org.example.g1201_1300.s1295_find_numbers_with_even_number_of_digits;

// #Easy #Array #Math

/**
 * 1295. Find Numbers with Even Number of Digits
 *
 * Дан целочисленный массив nums. Необходимо вернуть количество
 * чисел в массиве, которые содержат четное количество цифр.
 * (примеры внизу)
 *
 * Решение Подсчет цифр через логарифм - 2-е по скорости
 * 1-е по скорости использует тот же принцип
 *
 * Сложность:
 * Время: O(n)
 * Память: O(1)
 *
 */
public class Solution {
    public int findNumbers(int[] nums) {
        int count = 0;

        for (int num : nums) {
            // Вычисляем количество цифр через логарифм
            // log10(10) = 1, log10(100) = 2 и т.д.
            int digitCount = (int) Math.log10(num) + 1;

            // Проверяем, четное ли количество цифр
            if (digitCount % 2 == 0) {
                count++;
            }
        }

        return count;
    }
}
/*
Пример 1
Вход: nums = [12,345,2,6,7896]
Выход: 2
Объяснение:
12 → 2 цифры (четное)
345 → 3 цифры (нечетное)
2 → 1 цифра (нечетное)
6 → 1 цифра (нечетное)
7896 → 4 цифры (четное)


Пример 2
Вход: nums = [555,901,482,1771]
Выход: 1
Объяснение:
555 → 3 цифры (нечетное)
901 → 3 цифры (нечетное)
482 → 3 цифры (нечетное)
1771 → 4 цифры (четное)
 */