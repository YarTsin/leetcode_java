package org.example.g1201_1300.s1266_minimum_time_visiting_all_points;

// #Easy #Array #Math #Geometry #Интересно #Matrix

/**
 * 1266. Minimum Time Visiting All Points
 * На плоскости даны координаты нескольких точек.
 * Массив points содержит координаты точек в порядке их посещения,
 * где points[i] = [xi, yi] представляет координаты i-й точки.
 *
 * Вам нужно перемещаться между точками по следующим правилам:
 * За одну секунду вы можете перемещаться:
 * - На 1 единицу по вертикали
 * - ИЛИ на 1 единицу по горизонтали
 * - ИЛИ на 1 единицу по диагонали (эквивалентно одновременному
 * перемещению на 1 по вертикали и 1 по горизонтали)
 * Вы должны посещать точки в заданном порядке
 * Вы можете проходить через другие точки, которые
 * не являются точками остановки
 * (примеры внизу)
 *
 * Решение Математический подход на основе Chebyshev distance
 * 2-е решение по скорости
 *
 * Сложность:
 * Время: O(n), где n - количество точек
 * Память: O(1)
 *
 */
public class Solution {
    public int minTimeToVisitAllPoints(int[][] points) {
        // Инициализируем общее время
        int totalTime = 0;

        // Проходим по всем последовательным парам точек
        for (int i = 0; i < points.length - 1; i++) {
            // Текущая точка
            int x1 = points[i][0];
            int y1 = points[i][1];

            // Следующая точка
            int x2 = points[i + 1][0];
            int y2 = points[i + 1][1];

            // Вычисляем абсолютные разности координат
            int dx = Math.abs(x2 - x1);
            int dy = Math.abs(y2 - y1);

            // Добавляем максимальную разность к общему времени
            totalTime += Math.max(dx, dy);
        }

        return totalTime;
    }
}
/*
Пример 1
Вход: points = [[1,1],[3,4],[-1,0]]
Перемещение от [1,1] к [3,4]:
- По диагонали: [1,1] → [2,2] → [3,3] (2 секунды)
- По вертикали: [3,3] → [3,4] (1 секунда)
Итого: 3 секунды

Перемещение от [3,4] к [-1,0]:
- По диагонали: [3,4] → [2,3] → [1,2] → [0,1] → [-1,0] (4 секунды)
Общее время: 3 + 4 = 7 секунд

Пример 2
Вход: points = [[3,2],[-2,2]]
Перемещение от [3,2] к [-2,2]:
- По горизонтали: 5 шагов (5 секунд)
- По вертикали: 0 шагов
Итого: 5 секунд
 */