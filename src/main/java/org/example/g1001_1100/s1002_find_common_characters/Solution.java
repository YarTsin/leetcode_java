package org.example.g1001_1100.s1002_find_common_characters;

// #Easy #Array #String #Hash_Table

import java.util.ArrayList;
import java.util.List;

/**
 * 1002. Find Common Characters
 *
 * Дан массив строк words, состоящий из строчных английских букв.
 * Необходимо вернуть массив всех символов, которые встречаются
 * в каждой строке массива (включая дубликаты).
 *
 * Например, если символ 'l' встречается 3 раза во всех строках,
 * то в результате он должен появиться 3 раза. Порядок символов
 * в результате не имеет значения.
 *
 * Пример 1
 * Input: words = ["bella","label","roller"]
 * Output: ["e","l","l"]
 * Объяснение:
 * - 'e' встречается в каждой строке
 * - 'l' встречается дважды в каждой строке
 *
 * Пример 2
 * Input: words = ["cool","lock","cook"]
 * Output: ["c","o"]
 * Объяснение:
 * - 'c' встречается в каждой строке
 * - 'o' встречается в каждой строке
 *
 * Решение 1 - третье по скорости - 3 ms
 *
 * Подход:
 *
 * Используем массив minFreq размером 26 (по количеству букв английского алфавита)
 * Для каждого слова подсчитываем частоту каждого символа
 * Для каждого символа находим минимальную частоту встречаемости во всех словах
 * Формируем результат, добавляя каждый символ столько раз, сколько
 * он встречается минимально
 */
class Solution {
    public List<String> commonChars(String[] words) {
        // Массив для хранения минимальных частот символов
        int[] minFreq = new int[26];

        // Инициализируем минимальные частоты максимальными значениями
        for (int i = 0; i < 26; i++) {
            minFreq[i] = Integer.MAX_VALUE;
        }

        // Проходим по всем словам в массиве
        for (String word : words) {
            // Массив для подсчета частот символов в текущем слове
            int[] charFreq = new int[26];

            // Подсчитываем частоты символов в текущем слове
            for (char c : word.toCharArray()) {
                charFreq[c - 'a']++;
            }

            // Обновляем минимальные частоты
            for (int i = 0; i < 26; i++) {
                minFreq[i] = Math.min(minFreq[i], charFreq[i]);
            }
        }

        // Формируем результат на основе минимальных частот
        List<String> result = new ArrayList<>();
        for (int i = 0; i < 26; i++) {
            // Добавляем символ столько раз, сколько он встречается минимально
            for (int j = 0; j < minFreq[i]; j++) {
                result.add(String.valueOf((char) ('a' + i)));
            }
        }

        return result;
    }
}