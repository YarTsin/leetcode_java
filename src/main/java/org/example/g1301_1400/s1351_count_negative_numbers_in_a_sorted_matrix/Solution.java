package org.example.g1301_1400.s1351_count_negative_numbers_in_a_sorted_matrix;

/**
 * #Easy #Array #BinarySearch #Matrix
 * 1351. Count Negative Numbers in a Sorted Matrix
 *
 * Условие задачи:
 * Дана матрица grid размером m × n, которая отсортирована
 * по неубыванию как по строкам, так и по столбцам.
 * Необходимо вернуть количество отрицательных чисел в матрице.
 *
 * Особенности матрицы:
 * Каждая строка отсортирована по неубыванию слева направо
 * Каждый столбец отсортирован по неубыванию сверху вниз
 * Матрица может содержать отрицательные, положительные числа и нули
 *
 * Пример 1
 * Вход: grid = [
 *   [4,3,2,-1],
 *   [3,2,1,-1],
 *   [1,1,-1,-2],
 *   [-1,-1,-2,-3]
 * ]
 * Выход: 8
 * Объяснение: В матрице 8 отрицательных чисел
 *
 * Оптимальное решение: Обход с использованием свойств сортировки
 * это самое быстрое решение - 0 ms
 *
 */
class Solution {
    public int countNegatives(int[][] grid) {
        int rowCount = grid.length;
        int colCount = grid[0].length;
        int count = 0;

        // Начинаем с правого верхнего угла
        int row = 0;
        int col = colCount - 1;

        while (row < rowCount && col >= 0) {
            if (grid[row][col] < 0) {
                // Все элементы ниже в этом столбце также отрицательные
                count += (rowCount - row);
                col--; // Переходим к следующему столбцу слева
            } else {
                // Текущий элемент неотрицательный, переходим к следующей строке
                row++;
            }
        }

        return count;
    }
}
