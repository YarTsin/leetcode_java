Решение на анализе четности символа
Если n чётное:
Нам нужно как минимум два символа. Мы не можем использовать
один символ, так как его количество будет чётным (n - чётное).
Мы можем создать строку, состоящую из (n - 1) раз повторенного символа
'a' и одного символа 'b'.
Результат: (n - 1) * 'a' + 'b'
Проверка: Количество 'a' = n - 1 (нечётное, т.к. мы вычли 1 из чётного n).
Количество 'b' = 1 (нечётное).

Если n нечётное:
Мы можем использовать всего один символ, так как его количество (n) будет нечётным.
Результат: n * 'a'
Проверка: Количество 'a' = n (нечётное).

=========

Сравнение решений:
Подход со StringBuilder часто считается более "идиоматичным"
для Java при пошаговом построении строки.
Подход с массивом может быть микроскопически быстрее на
больших n, так Arrays.fill — это нативная оптимизированная операция.
Однако на практике для задач Leetcode разница будет незаметна.
Выбор между ними чаще всего зависит от предпочтений разработчика.
Первый подход более читаем и прямолинеен.