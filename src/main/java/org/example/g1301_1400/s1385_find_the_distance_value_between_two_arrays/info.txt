Объяснение подходов:
1. Решение с сортировкой и бинарным поиском (оптимальное)
Сложность: O(n log m + m log m) по времени, O(1) по памяти
Основные шаги:
Сортируем массив arr2 для возможности бинарного поиска
Для каждого элемента в arr1:
Ищем в arr2 элемент, который находится на расстоянии ≤ d
Если такой элемент найден - текущий элемент невалиден
Если не найден - увеличиваем счетчик
Преимущества:
Хорошая производительность для больших массивов
Использует преимущества сортировки

2. Решение с двумя указателями
Сложность: O(n log n + m log m + n + m) по времени, O(1) по памяти
Основные шаги:
Сортируем оба массива
Используем два указателя для одновременного обхода
Сравниваем элементы и определяем валидность
Преимущества:
Линейный обход после сортировки
Эффективно для средних размеров данных

3. Простое решение (двойной цикл)
Сложность: O(n × m) по времени, O(1) по памяти
Основные шаги:
Для каждого элемента в arr1 проверяем все элементы в arr2
Если все расстояния > d - элемент валиден
Недостатки:
Медленно для больших массивов
Не использует преимущества возможной оптимизации