package org.example.g1301_1400.s1356_sort_integers_by_the_number_of_1_bits;

// #Easy #Array #Sorting #Bit_Manipulation
// #Counting #компаратор


import java.util.*;

/**
 * 1356. Sort Integers by The Number of 1 Bits
 *
 * Дан массив целых чисел arr. Нужно отсортировать
 * массив в порядке возрастания количества единичных битов
 * в двоичном представлении каждого числа. Если у двух чисел
 * одинаковое количество единичных битов, они должны быть отсортированы
 * по возрастанию их числового значения.
 *
 * Цель: Вернуть отсортированный массив.
 * todo запутанное условие
 *
 * (примеры внизу)
 *
 * Решение: кастомный компаратор с подсчетом битов
 * Не быстрое 7 ms
 *
 * Подход:
 * Используем Integer.bitCount() для подсчета единичных битов
 * Создаем кастомный компаратор, который сначала сравнивает
 * количество битов, затем числовые значения
 *
 * Сложность
 * Временная сложность: O(n log n) - из-за сортировки
 * Пространственная сложность: O(n) - для Integer массива
 */
class Solution {
    public int[] sortByBits(int[] arr) {
        // Преобразуем массив в Integer[] для использования с компаратором
        Integer[] integerArr = new Integer[arr.length];
        for (int i = 0; i < arr.length; i++) {
            integerArr[i] = arr[i];
        }

        // Сортируем с кастомным компаратором
        Arrays.sort(integerArr, (a, b) -> {
            int countA = Integer.bitCount(a);
            int countB = Integer.bitCount(b);

            if (countA == countB) {
                return a - b; // Сортируем по числовому значению
            }
            return countA - countB; // Сортируем по количеству битов
        });

        // Преобразуем обратно в int[]
        for (int i = 0; i < arr.length; i++) {
            arr[i] = integerArr[i];
        }

        return arr;
    }
}
/*
Пример 1
Вход: arr = [0,1,2,3,4,5,6,7,8]
Выход: [0,1,2,4,8,3,5,6,7]
Объяснение:
0: 0 единичных битов
1: 1 единичный бит
2: 1 единичный бит
4: 1 единичный бит
8: 1 единичный бит
3: 2 единичных бита
5: 2 единичных бита
6: 2 единичных бита
7: 3 единичных бита

 */