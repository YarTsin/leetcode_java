package org.example.g1301_1400.s1323_maximum_69_number;

// #Easy #Math #Greedy

/**
 * 1323. Maximum 69 Number
 *
 * Дано положительное целое число num, состоящее только из цифр 6 и 9.
 * Можно изменить не более одной цифры (6 на 9 или 9 на 6).
 * Цель: Вернуть максимальное число, которое можно получить,
 * изменив не более одной цифры.
 * (примеры внизу)
 *
 * Решение - преобразуем число в массив чисел
 * Самое быстрое - 0 ms
 *
 *
 * Подход: Найти первую цифру 6 и заменить ее на 9
 * Проходим по цифрам числа слева направо
 * Первую встреченную цифру 6 заменяем на 9
 * Если все цифры 9, возвращаем исходное число
 */
class Solution {
    public int maximum69Number(int num) {
        // Преобразуем число в массив символов для удобства обработки
        char[] digits = Integer.toString(num).toCharArray();

        // Ищем первую цифру 6 и заменяем ее на 9
        for (int i = 0; i < digits.length; i++) {
            if (digits[i] == '6') {
                digits[i] = '9'; // Заменяем первую встреченную 6 на 9
                break; // Прерываем цикл после первой замены
            }
        }

        // Преобразуем обратно в число
        return Integer.parseInt(new String(digits));
    }
}
/*
Пример 1
Вход: num = 9669
Выход: 9969
Объяснение:
Изменяем первую цифру: 9669 → 6669 (не максимум)
Изменяем вторую цифру: 9669 → 9969 (максимум)
Изменяем третью цифру: 9669 → 9699 (меньше чем 9969)
Изменяем четвертую цифру: 9669 → 9666 (не максимум)

Пример 2
Вход: num = 9996
Выход: 9999
Объяснение: Изменяем последнюю цифру 6 на 9
 */