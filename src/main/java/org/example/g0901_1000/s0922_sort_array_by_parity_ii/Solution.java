package org.example.g0901_1000.s0922_sort_array_by_parity_ii;

// #Easy #Array #Sorting #Two_Pointers

/**
 * 922. Sort Array By Parity II
 * Дан массив целых чисел nums неотрицательных целых чисел.
 * Массив имеет четную длину. Половина чисел четные,
 * половина - нечетные. Необходимо отсортировать массив так, чтобы:
 * На четных позициях (индексы 0, 2, 4, ...) находились четные числа
 * На нечетных позициях (индексы 1, 3, 5, ...) находились нечетные числа
 * Примечание: Можно вернуть любой ответ, удовлетворяющий условиям.
 *
 * Пример 1
 * Вход: nums = [4,2,5,7]
 * Выход: [4,5,2,7]
 * Объяснение:
 * - Индекс 0 (четный): 4 (четное) ✓
 * - Индекс 1 (нечетный): 5 (нечетное) ✓
 * - Индекс 2 (четный): 2 (четное) ✓
 * - Индекс 3 (нечетный): 7 (нечетное) ✓
 *
 * Пример 2
 * Вход: nums = [2,3]
 * Выход: [2,3]
 * Объяснение:
 * - Индекс 0: 2 (четное) ✓
 * - Индекс 1: 3 (нечетное) ✓
 *
 * Решение -  Два указателя для четных и нечетных позиций
 * 3 решение по скорости - 2 ms
 *
 */
class Solution {
    public int[] sortArrayByParityII(int[] nums) {
        int n = nums.length;
        int[] result = new int[n];

        int evenIndex = 0; // для четных позиций (0, 2, 4, ...)
        int oddIndex = 1;  // для нечетных позиций (1, 3, 5, ...)

        for (int num : nums) {
            if (num % 2 == 0) {
                // Четное число - помещаем на следующую четную позицию
                result[evenIndex] = num;
                evenIndex += 2;
            } else {
                // Нечетное число - помещаем на следующую нечетную позицию
                result[oddIndex] = num;
                oddIndex += 2;
            }
        }

        return result;
    }
}
