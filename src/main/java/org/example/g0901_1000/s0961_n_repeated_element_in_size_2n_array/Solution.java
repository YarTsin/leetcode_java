package org.example.g0901_1000.s0961_n_repeated_element_in_size_2n_array;

// #Easy #Array #HashSet

/**
 * 961. N-Repeated Element in Size 2N Array
 * Вам дан целочисленный массив nums с следующими свойствами:
 * Длина массива nums равна 2n
 * В массиве содержится n + 1 различных элементов
 * Ровно один элемент повторяется n раз
 * Ваша задача - найти и вернуть элемент, который повторяется n раз.
 * (примеры внизу)
 *
 * todo запутанное условие
 *
 * Решение: проверка элементов - это самое быстрое решение - 0 ms
 *
 * Подход:
 * Используем свойство задачи: один элемент повторяется n раз,
 * а все остальные элементы уникальны. Это означает, что
 * повторяющийся элемент будет встречаться через определенные
 * промежутки. Мы можем проверять соседние элементы и если находим
 * два одинаковых, это искомый элемент.
 *
 * Временная сложность: O(n) - в худшем случае пройдем весь массив
 * Пространственная сложность: O(1) - используем только константную память
 *
 */
class Solution {
    public int repeatedNTimes(int[] nums) {
        int n = nums.length;

        // Проверяем соседние элементы с шагом 1, 2 и 3
        // Это покрывает все возможные варианты расположения повторяющегося элемента
        for (int i = 0; i < n; i++) {
            // Проверяем следующий элемент (шаг 1)
            if (i + 1 < n && nums[i] == nums[i + 1]) {
                return nums[i];
            }

            // Проверяем элемент через один (шаг 2)
            if (i + 2 < n && nums[i] == nums[i + 2]) {
                return nums[i];
            }

            // Проверяем элемент через два (шаг 3)
            if (i + 3 < n && nums[i] == nums[i + 3]) {
                return nums[i];
            }
        }

        // Если не нашли (маловероятно, но для безопасности)
        return -1;
    }
}

/*
Пример 1
Вход: nums = [1,2,3,3]
Выход: 3
Объяснение:
Длина массива = 4 = 2n ⇒ n = 2
Количество различных элементов = 3 (1, 2, 3) = n + 1
Элемент 3 повторяется 2 раза = n раз

Пример 2
Вход: nums = [2,1,2,5,3,2]
Выход: 2
Объяснение:
Длина массива = 6 = 2n ⇒ n = 3
Количество различных элементов = 4 (1, 2, 3, 5) = n + 1
Элемент 2 повторяется 3 раза = n раз

Пример 3
Вход: nums = [5,1,5,2,5,3,5,4]
Выход: 5
Объяснение:
Длина массива = 8 = 2n ⇒ n = 4
Количество различных элементов = 5 (1, 2, 3, 4, 5) = n + 1
Элемент 5 повторяется 4 раза = n раз
 */
