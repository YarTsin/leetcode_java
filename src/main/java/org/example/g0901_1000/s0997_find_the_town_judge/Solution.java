package org.example.g0901_1000.s0997_find_the_town_judge;

// #Easy #Array #Hash_Table #Graph #Game

/**
 * 997. Find the Town Judge
 *
 * В городе есть n людей, пронумерованных от 1 до n.
 * Ходят слухи, что один из этих людей является тайным судьей города.
 *
 * Если судья существует, то:
 * Судья никому не доверяет (не доверяет другим людям)
 * Все остальные люди доверяют судье (каждый доверяет судье)
 * Ровно один человек удовлетворяет свойствам 1 и 2
 *
 * Вам дан массив trust, где trust[i] = [a_i, b_i] означает,
 * что человек a_i доверяет человеку b_i.
 *
 * Верните метку судьи, если судья существует и может быть
 * идентифицирован, иначе верните -1.
 * (примеры внизу)
 *
 * Решение - 2 массива - 4 решение - 3 ms
 *
 * Подход:
 * Используем два массива для подсчета:
 * trustsCount - сколько людей доверяет данному человеку (входящие доверия)
 * trustsOthers - доверяет ли данный человек кому-либо (исходящие доверия)
 *
 * Судья должен иметь:
 * trustsCount[i] = n - 1 (все доверяют ему)
 * trustsOthers[i] = 0 (он никому не доверяет)
 *
 * Временная сложность: O(n + t), где t - длина массива trust
 * Пространственная сложность: O(n)
 *
 *
 */
class Solution {
    public int findJudge(int n, int[][] trust) {
        // Массив для подсчета количества людей, которые доверяют данному человеку
        int[] trustsCount = new int[n + 1];
        // Массив для отслеживания, доверяет ли данный человек кому-либо
        int[] trustsOthers = new int[n + 1];

        // Обрабатываем все отношения доверия
        for (int[] relation : trust) {
            int a = relation[0]; // кто доверяет
            int b = relation[1]; // кому доверяют

            trustsCount[b]++;    // b получает доверие
            trustsOthers[a]++;   // a доверяет кому-то
        }

        // Ищем человека, которому доверяют все (n-1 человек) и который никому не доверяет
        for (int i = 1; i <= n; i++) {
            if (trustsCount[i] == n - 1 && trustsOthers[i] == 0) {
                return i;
            }
        }

        return -1;
    }
}
/*
Пример 1
Вход: n = 2, trust = [[1,2]]
Выход: 2
Объяснение:
Человек 1 доверяет человеку 2.
Человек 2 никому не доверяет.
Все доверяют человеку 2 → человек 2 является судьей.

Пример 2
Вход: n = 3, trust = [[1,3],[2,3]]
Выход: 3
Объяснение:
Человек 1 доверяет человеку 3.
Человек 2 доверяет человеку 3.
Человек 3 никому не доверяет.
Все доверяют человеку 3 → человек 3 является судьей.

Пример 3
Вход: n = 3, trust = [[1,3],[2,3],[3,1]]
Выход: -1
Объяснение:
Человек 1 доверяет человеку 3.
Человек 2 доверяет человеку 3.
Человек 3 доверяет человеку 1.
Никто не удовлетворяет условиям судьи.

 */
