package org.example.g0901_1000.s0941_valid_mountain_array;

// #Easy #Array

/**
 * 941. Valid Mountain Array
 * Дан массив целых чисел arr. Необходимо определить,
 * является ли он "горным массивом" (valid mountain array).
 *
 * Массив называется горным, если:
 * arr.length >= 3
 * Существует некоторый индекс i (0 < i < arr.length - 1) такой, что:
 * arr[0] < arr[1] < ... < arr[i-1] < arr[i] (строго возрастающая последовательность)
 * arr[i] > arr[i+1] > ... > arr[arr.length-1] (строго убывающая последовательность)
 *
 * Важные особенности:
 * Строгое возрастание/убывание (без равенства соседних элементов)
 * Пик не может быть на краях массива
 * Минимальная длина массива - 3 элемента
 *
 * Пример 1
 * Input: arr = [0,3,2,1]
 * Output: true
 * Объяснение: Строго возрастает до 3, затем строго убывает
 *
 * Пример 2
 * Input: arr = [0,1,2,3,4,5,6,7,8,9]
 * Output: false
 * Объяснение: Только возрастание, нет убывания
 *
 * Решение: два указателя - 2-е по скорости - 1 ms
 *
 * Сложность:
 * Время: O(n) - один проход по массиву
 * Память: O(1) - константная память
 */
class Solution {
    public boolean validMountainArray(int[] arr) {
        int n = arr.length;

        // Проверяем минимальную длину
        if (n < 3) {
            return false;
        }

        int left = 0;
        int right = n - 1;

        // Поднимаемся слева до пика
        while (left < n - 1 && arr[left] < arr[left + 1]) {
            left++;
        }

        // Спускаемся справа до пика
        while (right > 0 && arr[right] < arr[right - 1]) {
            right--;
        }

        // Проверяем, что указатели встретились в одной точке
        // и эта точка не на краю массива
        return left == right && left > 0 && left < n - 1;
    }
}
