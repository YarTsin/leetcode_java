package org.example.g0701_0800.s0724_find_pivot_index;

// #Easy #Array #Prefix_Sum #LeetCode_75_Prefix_Sum


/**
 * 724. Find Pivot Index
 * Центральный индекс (pivot index) - это индекс массива,
 * где сумма всех элементов слева от индекса равна сумме
 * всех элементов справа от индекса.
 *
 * Формально, для индекса i в массиве nums:
 * Сумма элементов с индексами 0 до i-1 равна сумме элементов с индексами i+1 до n-1
 * Если i = 0, то левая сумма равна 0
 * Если i = n-1, то правая сумма равна 0
 *
 * Необходимо найти самый левый центральный индекс.
 * Если такого индекса не существует, вернуть -1.
 *
 * Особенности реализации
 * Длина массива в диапазоне [0, 10000]
 *
 * Элементы массива целые числа в диапазоне [-1000, 1000]
 * (примеры внизу)
 *
 * Решение с префиксными суммами - свмое быстрое - 1 ms
 *
 * Преимущества:
 * Временная сложность: O(n)
 * Пространственная сложность: O(1)
 * Только два прохода по массиву
 * Очень эффективно и просто
 */
class Solution {
    public int pivotIndex(int[] nums) {
        int totalSum = 0;
        int leftSum = 0;

        // Вычисляем общую сумму массива
        for (int num : nums) {
            totalSum += num;
        }

        // Проходим по массиву и проверяем каждый индекс
        for (int i = 0; i < nums.length; i++) {
            // Правая сумма = общая сумма - левая сумма - текущий элемент
            int rightSum = totalSum - leftSum - nums[i];

            // Если левая сумма равна правой, нашли центральный индекс
            if (leftSum == rightSum) {
                return i;
            }

            // Добавляем текущий элемент к левой сумме для следующей итерации
            leftSum += nums[i];
        }

        // Центральный индекс не найден
        return -1;
    }
}
/*
Пример 1

Input: nums = [1, 7, 3, 6, 5, 6]
Output: 3
Объяснение:
Индекс 3:
Левая сумма = 1 + 7 + 3 = 11
Правая сумма = 5 + 6 = 11

Пример 2
Input: nums = [1, 2, 3]
Output: -1
Объяснение:
Ни один индекс не удовлетворяет условию.

Пример 3
Input: nums = [2, 1, -1]
Output: 0
Объяснение:
Индекс 0:
Левая сумма = 0 (нет элементов слева)
Правая сумма = 1 + (-1) = 0
 */