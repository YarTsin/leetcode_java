Что такое битовая маска?

(на основе решения 3 задачи 500)

Битовая маска - это способ хранить информацию в одном числе,
используя его отдельные биты как флаги (включено/выключено).

Представьте, что у вас есть 26 лампочек (по одной на каждую букву алфавита).
Каждая лампочка может быть:
1 (включена) - буква есть в ряду
0 (выключена) - буквы нет в ряду

Как создаются маски для рядов?
private int getBitMask(String s) {
    int mask = 0;  // Начальное значение: все биты 0
    for (char c : s.toCharArray()) {
        // Устанавливаем бит для каждой буквы
        mask |= (1 << (c - 'a'));
    }
    return mask;
}

Как это работает:
c - 'a' - вычисляем позицию буквы в алфавите:
'a' - 'a' = 0 (первый бит)
'b' - 'a' = 1 (второй бит)
'z' - 'a' = 25 (26-й бит)

1 << position - создаем число, где только один бит установлен в 1 на нужной позиции:
1 << 0 = 1 (двоичное: 000...0001)
1 << 1 = 2 (двоичное: 000...0010)
1 << 2 = 4 (двоичное: 000...0100)

mask |= value - добавляем бит в маску:
mask = mask OR value - устанавливаем бит в 1

Пример для ряда "abc":
'a' → position = 0 → 1 << 0 = 1 (0001)
'b' → position = 1 → 1 << 1 = 2 (0010)
'c' → position = 2 → 1 << 2 = 4 (0100)

Маска = 1 | 2 | 4 = 7 (двоичное: 0111)

Как проходит основная проверка
private boolean isInOneRow(String word, int row1, int row2, int row3) {
    int wordMask = getBitMask(word);  // Создаем маску для слова

    // Проверяем, что ВСЕ биты слова есть в одном из рядов
    return (wordMask & ~row1) == 0 ||
           (wordMask & ~row2) == 0 ||
           (wordMask & ~row3) == 0;
}


Разберем по шагам:
1. ~row1 - инверсия маски ряда
Если row1 = 7 (0111), то ~row1 = ...1111000 (все биты, которых НЕТ в row1)

2. wordMask & ~row1 - находим "лишние" биты
Если в слове есть буквы, которых нет в row1, они будут в результате

3. == 0 - проверяем, что нет лишних битов
Если результат равен 0 → все буквы слова есть в row1

 Конкретный пример
Ряды:
row1 ("qwe") = маска для q, w, e
row2 ("asd") = маска для a, s, d
row3 ("zxc") = маска для z, x, c

Слово: "we"
wordMask = маска для w и e

Проверка для row1
wordMask = ...000000000000000000000110 (w и e)
row1     = ...000000000000000000000111 (q, w, e)
~row1    = ...111111111111111111111000 (все кроме q, w, e)

wordMask & ~row1 = ...000000000000000000000000 = 0 ✓


Слово: "was" (w из row1, a и s из row2)
wordMask = маска для w, a, s
wordMask & ~row1 ≠ 0 (буквы a,s не из row1)
wordMask & ~row2 ≠ 0 (буква w не из row2)
wordMask & ~row3 ≠ 0 (все буквы не из row3)
→ false ✗
