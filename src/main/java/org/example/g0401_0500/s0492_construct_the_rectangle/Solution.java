package org.example.g0401_0500.s0492_construct_the_rectangle;

// #Easy #Math

/**
 * 492. Construct the Rectangle
 *
 * Для заданной площади area веб-страницы необходимо найти длину L
 * и ширину W прямоугольника, удовлетворяющих следующим требованиям:
 * Площадь прямоугольника равна заданной площади: L * W = area
 * Разница между длиной и шириной должна быть минимально возможной
 * Длина должна быть больше или равна ширине: L >= W
 *
 * Ограничения:
 * 1 <= area <= 10⁷
 *
 * Важные особенности:
 * Нужно найти целочисленные значения L и W
 * L должно быть >= W
 * Разница |L - W| должна быть минимальной
 * Если multiple решений, выбрать то где L максимально близко к W
 * (примеры внизу)
 *
 * Решение (Поиск от квадратного корня)
 *
 * Это самое быстрое решение - 0 ms
 *
 */
class Solution {
    public int[] constructRectangle(int area) {
        // Начинаем с целой части квадратного корня
        int w = (int) Math.sqrt(area);

        // Ищем наибольший делитель, меньший или равный sqrt(area)
        while (area % w != 0) {
            w--;
        }

        int l = area / w;
        return new int[]{l, w};
    }
}

/*
Пример 1
Ввод: area = 4
Вывод: [2,2]
Объяснение: 2 * 2 = 4, разница 0

Пример 2
Ввод: area = 37
Вывод: [37,1]
Объяснение: 37 * 1 = 37, другие варианты: только [37,1] так как 37 простое

Пример 3
Ввод: area = 122122
Вывод: [427,286]
Объяснение: 427 * 286 = 122122, разница 141

Объяснение подхода:
Начинаем с квадратного корня: Идеальная пара - когда L и W максимально близки, т.е. near sqrt(area)
Двигаемся вниз: Уменьшаем W пока не найдем делитель area
Вычисляем L: L = area / W
Возвращаем результат: [L, W] где L >= W

Сложность:
Временная сложность: O(√area) - в худшем случае
Пространственная сложность: O(1)

 */