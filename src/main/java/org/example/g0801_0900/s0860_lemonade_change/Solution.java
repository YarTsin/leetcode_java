package org.example.g0801_0900.s0860_lemonade_change;

/**
 * #Easy #Array #Greedy
 *
 * Условие: У вас есть ларёк с лимонадом, каждый стакан стоит 5 долларов.
 * Клиенты стоят в очереди и покупают по одному стакану, оплачивая
 * купюрами номиналом 5, 10 или 20 долларов. Вы должны давать сдачу
 * каждому клиенту, при этом у вас изначально нет денег.
 *
 * Массив bills где каждый элемент - купюра (5, 10 или 20)
 *
 * Задача: Определить, сможете ли вы дать правильную сдачу
 * всем клиентам в порядке очереди.
 *
 * Правила сдачи:
 * За стакан стоимостью 5$:
 * Если клиент платит 5$ - сдача не нужна
 * Если клиент платит 10$ - нужна сдача 5$
 * Если клиент платит 20$ - нужна сдача 15$ (можно дать 10+5 или 5+5+5)
 *
 * Пример 1  * Input: bills = [5,5,5,10,20] * Output: true
 * Объяснение:
 * Первый клиент: 5$ - сдача 0
 * Второй клиент: 5$ - сдача 0
 * Третий клиент: 5$ - сдача 0
 * Четвертый клиент: 10$ - сдача 5$ (есть)
 * Пятый клиент: 20$ - сдача 15$ (10+5, есть)
 *
 * Пример 2
 * Input: bills = [5,5,10,10,20]  * Output: false
 * Объяснение:
 * Третий клиент: 10$ - сдача 5$ (есть)
 * Четвертый клиент: 10$ - сдача 5$ (нет, все пятерки уже отданы)
 *
 * Как я понимаю это и есть классическая задача на Жадный алгоритм
 * Подход: Жадный алгоритм. Отслеживаем количество купюр каждого номинала.
 * При получении 20$ стараемся сначала отдать 10+5, если нет - то 5+5+5.
 *
 * По скорости это 3 место - 2 ms
 *
 */
public class Solution {
    public boolean lemonadeChange(int[] bills) {
        int count5 = 0; // Количество пятерок
        int count10 = 0; // Количество десяток

        for (int bill : bills) {
            if (bill == 5) {
                // Клиент платит 5$ - сдача не нужна
                count5++;
            } else if (bill == 10) {
                // Клиент платит 10$ - нужна сдача 5$
                if (count5 == 0) {
                    return false; // Нет пятерок для сдачи
                }
                count5--; // Отдаем одну пятерку
                count10++; // Получаем десятку
            } else if (bill == 20) {
                // Клиент платит 20$ - нужна сдача 15$
                // Предпочитаем отдать 10+5 если есть
                if (count10 > 0 && count5 > 0) {
                    count10--; // Отдаем десятку
                    count5--;  // Отдаем пятерку
                } else if (count5 >= 3) {
                    // Если нет 10+5, отдаем 5+5+5
                    count5 -= 3; // Отдаем три пятерки
                } else {
                    return false; // Не можем дать сдачу
                }
            }
        }

        return true; // Успешно обслужили всех клиентов
    }
}
/*
Оптимальное решение
Подход: Жадный алгоритм. Отслеживаем количество купюр каждого номинала.
При получении 20$ стараемся сначала отдать 10+5, если нет - то 5+5+5.

Сложность: O(n) - один проход по массиву
Память: O(1) - константная дополнительная память
 */