package org.example.g0801_0900.s0804_unique_morse_code_words;

// #Easy #Array #String #Hash_Table #HashSet

import java.util.HashSet;
import java.util.Set;

/**
 * 804. Unique Morse Code Words
 * Международный азбука Морзе определяет стандартное кодирование,
 * где каждая буква соответствует последовательности точек и тире. Например:
 * 'a' кодируется как ".-",
 * 'b' кодируется как "-...",
 * 'c' кодируется как "-.-.", и так далее.
 * Для удобства приведена полная таблица соответствия букв английского
 * алфавита и кодов Морзе.
 *
 * Дается массив слов. Каждое слово может быть записано как последовательность
 * кодов Морзе (путем конкатенации кодов каждой буквы). Например,
 * слово "cab" можно записать как "-.-..--..." (что является
 * конкатенацией "-.-.", ".-" и "-..."). Такой конкатенацией мы называем
 * преобразованием слова.
 *
 * Ваша задача — вернуть количество различных преобразований среди всех
 * слов в массиве.
 *
 * todo запутанное условие
 *
 * Решение - 2 по скорости - 2 ms
 */
class Solution {
    public int uniqueMorseRepresentations(String[] words) {
        // Массив кодов Морзе для каждой буквы от 'a' до 'z'
        String[] morseCodes = {
                ".-", "-...", "-.-.", "-..", ".", "..-.",
                "--.", "....", "..", ".---",
                "-.-", ".-..", "--", "-.", "---", ".--.",
                "--.-", ".-.", "...", "-",
                "..-", "...-", ".--", "-..-", "-.--", "--.."
        };

        // Множество для хранения уникальных преобразований Морзе
        Set<String> uniqueTransformations = new HashSet<>();

        // Обрабатываем каждое слово из входного массива
        for (String word : words) {
            // StringBuilder для эффективной конкатенации строк
            StringBuilder morseBuilder = new StringBuilder();

            // Преобразуем каждую букву в соответствующее кодирование Морзе
            for (char c : word.toCharArray()) {
                // Получаем индекс буквы: 'a' -> 0, 'b' -> 1, ..., 'z' -> 25
                int index = c - 'a';
                // Добавляем код Морзе для текущей буквы
                morseBuilder.append(morseCodes[index]);
            }

            // Добавляем преобразованное слово в множество
            uniqueTransformations.add(morseBuilder.toString());
        }

        // Количество уникальных преобразований равно размеру множества
        return uniqueTransformations.size();
    }
}
