package org.example.g0801_0900.s0883_projection_area_of_3d_shapes;

// #Easy #Array #Math #Matrix #Geometry

/**
 * 883. Projection Area of 3D Shapes
 * Дана сетка n × n где grid[i][j] представляет высоту куба,
 * расположенного в ячейке (i, j). Каждый куб имеет размер 1 × 1 × 1.
 *
 * Необходимо вычислить общую площадь проекции этих кубов на три плоскости:
 * - XY-плоскость (вид сверху): Площадь равна количеству непустых ячеек (где высота > 0)
 * - XZ-плоскость (вид спереди): Площадь равна сумме максимальных высот в каждом столбце
 * - YZ-плоскость (вид сбоку): Площадь равна сумме максимальных высот в каждой строке
 * Общая площадь проекции = XY + XZ + YZ
 * (примеры внизу)
 *
 * todo запутанное условие
 *
 * Решение - Прямой расчет трех проекций
 * Не быстрое решение - 3 ms
 *
 */
class Solution {
    public int projectionArea(int[][] grid) {
        int n = grid.length;
        int xyArea = 0;
        int xzArea = 0;
        int yzArea = 0;

        // Массивы для хранения максимальных высот по столбцам и строкам
        int[] maxCol = new int[n];
        int[] maxRow = new int[n];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                // XY проекция: считаем все ненулевые ячейки
                if (grid[i][j] > 0) {
                    xyArea++;
                }

                // Обновляем максимальную высоту в строке i
                maxRow[i] = Math.max(maxRow[i], grid[i][j]);

                // Обновляем максимальную высоту в столбце j
                maxCol[j] = Math.max(maxCol[j], grid[i][j]);
            }
        }

        // Суммируем максимальные высоты по строкам (YZ проекция)
        for (int max : maxRow) {
            yzArea += max;
        }

        // Суммируем максимальные высоты по столбцам (XZ проекция)
        for (int max : maxCol) {
            xzArea += max;
        }

        return xyArea + xzArea + yzArea;
    }
}
/*
Пример 1:
Вход: grid = [[1,2],[3,4]]
Выход: 17
Объяснение:
XY: 4 ячейки (все непустые)
XZ: max(1,3) + max(2,4) = 3 + 4 = 7
YZ: max(1,2) + max(3,4) = 2 + 4 = 6
Total: 4 + 7 + 6 = 17

Пример 2:
Вход: grid = [[2]]
Выход: 5
Объяснение:
XY: 1
XZ: 2
YZ: 2
Total: 1 + 2 + 2 = 5


 */