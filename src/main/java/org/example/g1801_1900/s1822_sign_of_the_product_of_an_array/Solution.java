package org.example.g1801_1900.s1822_sign_of_the_product_of_an_array;

// #Easy #Array #Math #Bits #XOR

/**
 * 1822. Sign of the Product of an Array
 *
 * Дан целочисленный массив nums. Необходимо найти знак произведения
 * всех элементов массива. Функция signFunc(x) определена как:
 * 1 если x > 0
 * -1 если x < 0
 * 0 если x = 0
 * Нужно вычислить произведение всех элементов массива и вернуть его знак.
 *
 * Важные моменты:
 * Не нужно вычислять фактическое произведение (может привести к переполнению)
 * Нужно только определить знак произведения
 * Массив может содержать отрицательные числа, положительные числа и нули
 *
 * Пример 1
 * Input: nums = [-1,-2,-3,-4,3,2,1] * Output: 1
 * Объяснение: Произведение всех чисел: (-1)×(-2)×(-3)×(-4)×3×2×1 = 144 > 0
 *
 * Пример 2
 * Input: nums = [1,5,0,2,-3]  * Output: 0
 * Объяснение: Произведение содержит 0 → результат 0
 *
 * Пример 3
 * Input: nums = [-1,1,-1,1,-1]  * Output: -1
 * Объяснение: Произведение: -1 × 1 × -1 × 1 × -1 = -1 < 0
 *
 * Решение - однопроходное - самое быстрое 0 ms
 *
 *
 */
class Solution {
    public int arraySign(int[] nums) {
        int negativeCount = 0;

        for (int num : nums) {
            if (num == 0) {
                // Если нашли ноль, произведение будет равно 0
                return 0;
            } else if (num < 0) {
                // Считаем количество отрицательных чисел
                negativeCount++;
            }
        }

        // Если количество отрицательных чисел четное - результат положительный
        // Если нечетное - отрицательный
        return negativeCount % 2 == 0 ? 1 : -1;
    }
}
