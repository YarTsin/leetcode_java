package org.example.g1401_1500.s1422_maximum_score_after_splitting_a_string;

// #Easy #String #Pointes

/**
 * 1422. Maximum Score After Splitting a String
 * Условие задачи: Дана строка s из нулей и единиц.
 * Нужно разделить строку на две непустые подстроки (left и right)
 * в некоторой позиции. Оценка (score) разделения вычисляется как:
 * Количество нулей в левой подстроке + Количество единиц в правой подстроке
 * Верните максимальную оценку, которую можно получить после разделения строки.
 * (примеры внизу)
 *
 * Ограничения:
 * 2 <= s.length <= 500
 * Строка s состоит только из символов '0' и '1'
 *
 * Решение в 1 проход (с указазателями?)
 * 2-е по скорости решение - 1 ms
 *
 */
class Solution {
    public int maxScore(String s) {
        int totalOnes = 0;
        // Считаем общее количество единиц в строке
        for (char c : s.toCharArray()) {
            if (c == '1') {
                totalOnes++;
            }
        }

        int maxScore = 0;
        int zerosInLeft = 0;
        int onesInRight = totalOnes;

        // Проходим по всем возможным точкам разделения (кроме последней)
        for (int i = 0; i < s.length() - 1; i++) {
            if (s.charAt(i) == '0') {
                zerosInLeft++;
            } else {
                onesInRight--;
            }

            // Вычисляем оценку для текущего разделения
            int currentScore = zerosInLeft + onesInRight;
            maxScore = Math.max(maxScore, currentScore);
        }

        return maxScore;
    }
}
/*
Пример 1
Input: s = "011101"
Output: 5
Объяснение:
Возможные разделения и их оценки:
- Разделение после индекса 0: "0" + "11101" -> 1 + 4 = 5
- Разделение после индекса 1: "01" + "1101" -> 1 + 3 = 4
- Разделение после индекса 2: "011" + "101" -> 1 + 2 = 3
- Разделение после индекса 3: "0111" + "01" -> 1 + 1 = 2
- Разделение после индекса 4: "01110" + "1" -> 2 + 1 = 3
Максимальная оценка = 5

Пример 2
Input: s = "00111"
Output: 5
Объяснение:
- Разделение после индекса 2: "00" + "111" -> 2 + 3 = 5

Пример 3
Input: s = "1111"
Output: 3
Объяснение:
- Разделение после индекса 0: "1" + "111" -> 0 + 3 = 3
- Разделение после индекса 1: "11" + "11" -> 0 + 2 = 2
- Разделение после индекса 2: "111" + "1" -> 0 + 1 = 1
 */
