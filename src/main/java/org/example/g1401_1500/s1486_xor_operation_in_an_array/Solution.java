package org.example.g1401_1500.s1486_xor_operation_in_an_array;

// #Easy #Math #Bit_Manipulation

/**
 * 1486. XOR Operation in an Array
 *
 * Вам дано целое число n и целое число start.
 * Определите массив nums, где:
 * nums[i] = start + 2 * i (для 0 <= i < n).
 * Верните результат применения операции побитового XOR ко
 * всем элементам массива nums.
 *
 * Проще говоря:
 * Нужно создать виртуальный массив из n элементов, где каждый
 * элемент вычисляется по формуле, а затем найти XOR всех этих элементов.
 * (примеры внизу)
 *
 *  Решение - прямолинейное - Brute Force
 *
 * Сложность:
 * Временная сложность: O(n). Мы выполняем цикл n раз,
 * и на каждой итерации делаем константное количество
 * операций (сложение, умножение, XOR).
 * Пространственная сложность: O(1). Мы не используем дополнительную
 * память, пропорциональную входным данным (массив nums мы не создаем,
 * а вычисляем его элементы "на лету"). Используется только несколько
 * целочисленных переменных.
 *
 */
class Solution {
    public int xorOperation(int n, int start) {
        // Инициализируем переменную для хранения результата.
        // 0 - нейтральный элемент для операции XOR (x ^ 0 = x).
        int result = 0;

        // Цикл для генерации каждого элемента массива и немедленного применения XOR.
        for (int i = 0; i < n; i++) {
            // Вычисляем текущий элемент массива
            int currentElement = start + 2 * i;
            // Накопительно применяем операцию XOR к результату
            result ^= currentElement;
        }

        // Возвращаем итоговый результат вычислений
        return result;
    }
}
/*
Пример 1
Ввод: n = 5, start = 0
Массив: nums = [0, 2, 4, 6, 8]
Вычисление: 0 XOR 2 XOR 4 XOR 6 XOR 8
Пошаговый расчет:
0 XOR 2 = 2
2 XOR 4 = 6
6 XOR 6 = 0
0 XOR 8 = 8
Вывод: 8

Пример 2
Ввод: n = 4, start = 3
Массив: nums = [3, 5, 7, 9]
Вычисление: 3 XOR 5 XOR 7 XOR 9
Пошаговый расчет:
3 XOR 5 = 6
6 XOR 7 = 1
1 XOR 9 = 8
Вывод: 8

Пример 3:
Ввод: n = 1, start = 7
Массив: nums = [7]
Вычисление: 7
Вывод: 7
Пример 4:
Ввод: n = 10, start = 5
Вывод: 2
 */