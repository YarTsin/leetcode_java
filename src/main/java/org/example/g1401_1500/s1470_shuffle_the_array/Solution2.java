package org.example.g1401_1500.s1470_shuffle_the_array;

/**
 * Решение на месте (In-place) с битовыми операциями
 * Подход:
 * Использование существующего массива для хранения результата
 * путем хранения двух чисел в одном элементе (используя битовые операции).
 * Более сложное, но экономит память.
 *
 * Сложность: O(n) по времени, O(1) по памяти
 */
class Solution2 {
    public int[] shuffle(int[] nums, int n) {
        // Объединяем два числа в одном int (используем первые 10 бит для каждого числа)
        for (int i = 0; i < n; i++) {
            // Сохраняем y-элемент в старших 10 битах
            nums[i + n] = (nums[i + n] << 10) | nums[i];
        }

        // Заполняем результирующий массив в обратном порядке
        for (int i = 0; i < n; i++) {
            // Извлекаем два числа из объединенного значения
            int combined = nums[i + n];
            int yElement = combined >> 10;     // Старшие 10 бит
            int xElement = combined & 0x3FF;   // Младшие 10 бит (1023 в десятичной)

            // Заполняем результат
            nums[2 * i] = xElement;
            nums[2 * i + 1] = yElement;
        }

        return nums;
    }
}
