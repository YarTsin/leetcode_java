package org.example.g1701_1800.s1800_maximum_ascending_subarray_sum;

// #Easy #Array #DP

/**
 * 1800. Maximum Ascending Subarray Sum
 *
 * Дан массив целых чисел nums. Необходимо найти
 * максимальную сумму элементов возрастающего подмассива.
 *
 * Что такое возрастающий подмассив?
 * Возрастающий подмассив - это последовательность последовательных
 * элементов массива, где каждый следующий элемент строго больше предыдущего.
 *
 * Важные уточнения:
 * Подмассив должен состоять из последовательных элементов исходного массива
 * Элементы в подмассиве должны строго возрастать (nums[i] < nums[i+1])
 * Подмассив может состоять из одного элемента (сумма будет равна этому элементу)
 * Нужно найти максимальную сумму среди всех таких возрастающих подмассивов
 * (примеры внизу)
 *
 * Решение - однопроходный алгоритм с отслеживанием
 * текущей суммы и максимальной суммы.
 * Самое быстрое
 *
 * Решение имеет временную сложность O(n) и пространственную сложность O(1).
 */
class Solution {
    public int maxAscendingSum(int[] nums) {
        // Если массив пустой, возвращаем 0
        if (nums == null || nums.length == 0) {
            return 0;
        }

        // Инициализируем максимальную сумму и текущую сумму
        int maxSum = nums[0]; // Минимум - первый элемент
        int currentSum = nums[0];

        // Проходим по массиву, начиная со второго элемента
        for (int i = 1; i < nums.length; i++) {
            // Проверяем, является ли текущая последовательность возрастающей
            if (nums[i] > nums[i - 1]) {
                // Продолжаем текущий возрастающий подмассив
                currentSum += nums[i];
            } else {
                // Начинаем новый возрастающий подмассив с текущего элемента
                currentSum = nums[i];
            }

            // Обновляем максимальную сумму, если текущая сумма больше
            if (currentSum > maxSum) {
                maxSum = currentSum;
            }
        }

        return maxSum;
    }
}
/*
Пример 1
Вход: nums = [10,20,30,5,10,50]
Результат: 65
Объяснение:
Возрастающие подмассивы: [10,20,30] (sum=60), [5,10,50] (sum=65)
Максимальная сумма: 65

Пример 2
Вход: nums = [10,20,30,40,50]
Результат: 150
Объяснение:
Весь массив является возрастающим подмассивом: [10,20,30,40,50] (sum=150)

Пример 3
Вход: nums = [12,17,15,13,10,11,12]
Результат: 33
Объяснение:
Возрастающие подмассивы: [12,17] (sum=29), [10,11,12] (sum=33)
Максимальная сумма: 33
*/