Решение с Set и рекурсией
Это классический подход для задач о подстроках с определенными
условиями. Хотя существуют решения с использованием Sliding Window,
они более сложны для реализации из-за условия, которое должно выполняться
для всех символов в окне. Рекурсивный подход "Разделяй и властвуй"
является здесь наиболее понятным и эффективным.

Основная идея:
Проверка условия: Если вся текущая подстрока (например, изначально
вся строка s) уже является "хорошей", мы нашли ответ для этой части.
Поиск "плохого" символа: Если строка не "хорошая", значит, в ней
существует хотя бы один символ, для которого отсутствует его пара
(прописная или строчная). Найдем первый такой символ.
Разделение: Этот "плохой" символ не может находиться ни в одной
хорошей подстроке. Потому что любая подстрока, содержащая его,
автоматически будет "плохой". Следовательно, мы можем разделить
исходную строку на части до этого символа и после него.
Рекурсия: Самую длинную хорошую подстроку нужно искать рекурсивно
в этих двух частях. Таким образом, мы отбрасываем проблемный символ
и ищем решение в меньших подзадачах.

Базовый случай: Если подстрока очень короткая (длины 1 или меньше),
она заведомо не может быть "хорошей" (так как для одной буквы нет пары).