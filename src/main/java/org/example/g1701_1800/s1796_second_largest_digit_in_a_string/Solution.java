package org.example.g1701_1800.s1796_second_largest_digit_in_a_string;

// #Easy #String #Hash_Table

/**
 * 1796. Second Largest Digit in a String
 *
 * Дана строка s, состоящая из букв латинского алфавита
 * (строчных и прописных) и цифр. Необходимо найти вторую
 * по величине цифру в строке. Если второй по величине цифры
 * не существует, следует вернуть -1.
 *
 * Важные уточнения:
 * Нужно рассматривать только цифры (0-9) в строке
 * Цифры могут повторяться
 * "Вторая по величине" означает второе максимальное значение
 * среди всех уникальных цифр
 * Если все цифры одинаковые, второй по величине цифры не существует
 * Если в строке только одна уникальная цифра, второй по величине
 * цифры не существует
 * Регистр букв не имеет значения (задача касается только цифр)
 * (примеры внизу)
 *
 * Решение - однопроходный оалгоритм с отслеживанием двух максимальных
 * значений - 3-е по скорости 2 ms
 *
 */
class Solution {
    public int secondHighest(String s) {
        // Инициализируем наибольшую и вторую наибольшую цифры
        int largest = -1;
        int secondLargest = -1;

        // Проходим по каждому символу строки
        for (int i = 0; i < s.length(); i++) {
            char currentChar = s.charAt(i);

            // Проверяем, является ли символ цифрой
            if (Character.isDigit(currentChar)) {
                // Преобразуем символ в числовое значение
                int currentDigit = currentChar - '0';

                // Если текущая цифра больше наибольшей
                if (currentDigit > largest) {
                    // Обновляем: предыдущая наибольшая становится второй наибольшей
                    secondLargest = largest;
                    largest = currentDigit;
                }
                // Если текущая цифра меньше наибольшей, но больше второй наибольшей
                // И не равна наибольшей (чтобы избежать дубликатов)
                else if (currentDigit < largest && currentDigit > secondLargest) {
                    secondLargest = currentDigit;
                }
                // Если цифра равна наибольшей или второй наибольшей, игнорируем
            }
        }

        // Возвращаем вторую наибольшую цифру (или -1, если ее нет)
        return secondLargest;
    }
}
/*
Пример 1
Примеры для понимания:
Пример 1:
Вход: s = "dfa12321afd"
Результат: 2
Объяснение:
Цифры в строке: 1, 2, 3
Уникальные цифры: 1, 2, 3
Максимальная цифра: 3
Вторая максимальная: 2

Пример 2
Вход: s = "abc1111"
Результат: -1
Объяснение:
Цифры в строке: 1, 1, 1, 1
Уникальные цифры: только 1
Второй по величине цифры не существует

Пример 3
Вход: s = "abc1234"
Результат: 3
Объяснение:
Уникальные цифры: 1, 2, 3, 4
Максимальная: 4, вторая максимальная: 3

 */