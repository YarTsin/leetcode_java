package org.example.g1701_1800.s1725_number_of_rectangles_that_can_form_the_largest_square;

// #Easy #Array #Геометрия #Math #Matrix

/**
 * 1725. Number Of Rectangles That Can Form The Largest Square
 *
 * Дан массив прямоугольников rectangles, где rectangles[i] = [li, wi]
 * представляет прямоугольник с длиной li и шириной wi.
 *
 * Можно разрезать прямоугольник на квадрат с длиной стороны,
 * равной меньшей из двух сторон (min(li, wi)). Например,
 * прямоугольник [4,6] можно разрезать на квадрат со стороной 4.
 *
 * Нужно найти:
 * Максимально возможную длину стороны квадрата, который можно получить
 * из данных прямоугольников
 * Количество прямоугольников, из которых можно получить квадрат
 * с такой максимальной длиной стороны
 * (примеры внизу)
 *
 * Решение - в один проход - 2-е по скорости - 2 ms
 *
 *
 */
class Solution {
    public int countGoodRectangles(int[][] rectangles) {
        int maxSide = 0;
        int count = 0;

        for (int[] rectangle : rectangles) {
            // Находим минимальную сторону прямоугольника (сторону квадрата)
            int side = Math.min(rectangle[0], rectangle[1]);

            if (side > maxSide) {
                // Нашли новую максимальную сторону
                maxSide = side;
                count = 1;
            } else if (side == maxSide) {
                // Увеличиваем счетчик для текущей максимальной стороны
                count++;
            }
        }

        return count;
    }
}
/*
Пример 1
Input: rectangles = [[5,8],[3,9],[5,12],[16,5]]
Output: 3
Объяснение:
[5,8]: min(5,8) = 5
[3,9]: min(3,9) = 3
[5,12]: min(5,12) = 5
[16,5]: min(16,5) = 5
Максимальная длина стороны: 5
Количество прямоугольников с side = 5: 3

Пример 2
Input: rectangles = [[2,3],[3,7],[4,3],[3,7]]
Output: 3
Объяснение:
[2,3]: min(2,3) = 2
[3,7]: min(3,7) = 3
[4,3]: min(4,3) = 3
[3,7]: min(3,7) = 3
Максимальная длина стороны: 3
Количество прямоугольников с side = 3: 3

 */