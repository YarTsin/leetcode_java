package org.example.g0501_0600.s0575_distribute_candies;

// #Easy #Array #HashSet

import java.util.HashSet;
import java.util.Set;

/**
 * 575. Distribute Candies
 *
 * Алиса имеет n конфет, где каждая конфета имеет определенный
 * тип (тип представлен целым числом). Она хочет отдать половину
 * своих конфет брату, но при этом оставить за собой как можно
 * больше различных типов конфет.
 *
 * Необходимо найти максимальное количество различных типов конфет,
 * которые Алиса может иметь после отдачи половины конфет брату.
 * (минимум от двух чисел?)
 *
 * Правила:
 * Количество конфет n всегда четное
 * Алиса должна отдать ровно n/2 конфет брату
 * Она может выбирать, какие конфеты отдать
 * Цель - максимизировать количество различных типов конфет, которые останутся у Алисы
 * (примеры внизу)
 *
 * Решение: с использованием HashSet - не быстрое - 30 ms
 *
 * Подход:
 * Находим общее количество уникальных типов конфет
 * Максимальное количество типов, которые Алиса может оставить, ограничено:
 * Количеством уникальных типов
 * Половиной от общего количества конфет
 *
 * Преимущества:
 * Время выполнения: O(n) - один проход по массиву
 * Память: O(n) - для хранения уникальных типов
 * Простая и понятная логика
 *
 *
 *
 */
class Solution {
    public int distributeCandies(int[] candyType) {
        // Создаем Set для хранения уникальных типов конфет
        Set<Integer> uniqueCandyTypes = new HashSet<>();

        // Добавляем все конфеты в Set (автоматически удаляются дубликаты)
        for (int candy : candyType) {
            uniqueCandyTypes.add(candy);
        }

        int totalCandies = candyType.length;
        int maxCandiesAliceCanKeep = totalCandies / 2;
        int uniqueTypesCount = uniqueCandyTypes.size();

        // Алиса может оставить минимум из:
        // 1) количества уникальных типов
        // 2) половины от общего количества конфет
        return Math.min(uniqueTypesCount, maxCandiesAliceCanKeep);
    }
}
/*
Пример 1
Ввод: candyType = [1,1,2,2,3,3]
Вывод: 3
Объяснение:
Всего 6 конфет → Алиса отдает 3 конфеты брату
Уникальных типов: 3 (1,2,3)
Она может оставить по одной конфете каждого типа

Пример 2
Ввод: candyType = [1,1,2,3]
Вывод: 2
Объяснение:
Всего 4 конфеты → Алиса отдает 2 конфеты брату
Уникальных типов: 3 (1,2,3)
Но она может оставить максимум 2 различных типа (например, 2 и 3)

Пример 3
Ввод: candyType = [6,6,6,6]
Вывод: 1
Объяснение:
Всего 4 конфеты → Алиса отдает 2 конфеты брату
Уникальных типов: 1 (6)
Она может оставить только конфеты типа 6

 */
