package org.example.g1501_1600.s1576_replace_all_s_to_avoid_consecutive_repeating_characters;

// #Easy #String #Жадный

/**
 * 1576. Replace All ?'s to Avoid Consecutive Repeating Characters
 * Замена всех ? для избежания повторяющихся символов
 *
 * Дана строка s, содержащая только строчные английские буквы и
 * символы '?'. Необходимо заменить все '?' таким образом,
 * чтобы в результирующей строке не было двух одинаковых соседних символов.
 *
 * Ограничения:
 * Можно использовать только строчные английские буквы
 * Нельзя использовать символы, которые совпадают с левым или правым соседом
 * Гарантируется, что существует хотя бы одно валидное решение
 *
 * Пример 1
 * Вход: s = "?zs"  * Выход: "azs"
 * Объяснение:
 * "?" можно заменить на 'a', так как 'a' ≠ 'z' и 'z' ≠ 's'
 *
 * Пример 2
 * Вход: s = "ubv?w" * Выход: "ubvaw"
 * Объяснение:
 * "?" можно заменить на 'a', так как 'v' ≠ 'a' и 'a' ≠ 'w'
 *
 * Решение - жадный алгоритм - самое быстрое - 1 ms
 *
 * Сложность: O(n) по времени, O(n) по памяти
 *
 */
class Solution {
    public String modifyString(String s) {
        char[] chars = s.toCharArray();
        int n = chars.length;

        for (int i = 0; i < n; i++) {
            if (chars[i] == '?') {
                // Пробуем буквы от 'a' до 'c' (3 букв достаточно)
                for (char c = 'a'; c <= 'c'; c++) {
                    // Проверяем левого соседа (если существует)
                    if (i > 0 && chars[i - 1] == c) continue;
                    // Проверяем правого соседа (если существует)
                    if (i < n - 1 && chars[i + 1] == c) continue;
                    // Нашли подходящую букву
                    chars[i] = c;
                    break;
                }
            }
        }

        return new String(chars);
    }
}
