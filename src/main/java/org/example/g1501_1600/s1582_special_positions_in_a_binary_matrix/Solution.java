package org.example.g1501_1600.s1582_special_positions_in_a_binary_matrix;

// #Easy #Array #Matrix

/**
 * 1582. Special Positions in a Binary Matrix
 *
 * Дана бинарная матрица mat размером m × n (состоящая только из 0 и 1).
 * Необходимо найти количество "специальных" позиций.
 *
 * Позиция (i, j) называется специальной, если:
 * mat[i][j] == 1
 * Все остальные элементы в строке i равны 0
 * Все остальные элементы в столбце j равны 0
 * (примеры внизу)
 *
 * Решение - предварительное вычисление сумм
 * 3 по скорости решение - 2 ms
 *
 */
class Solution {
    public int numSpecial(int[][] mat) {
        int m = mat.length;
        int n = mat[0].length;

        // Создаем массивы для хранения сумм строк и столбцов
        int[] rowSum = new int[m];
        int[] colSum = new int[n];

        // Вычисляем суммы для каждой строки и каждого столбца
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                rowSum[i] += mat[i][j];
                colSum[j] += mat[i][j];
            }
        }

        int specialCount = 0;

        // Проверяем каждую позицию
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                // Позиция специальная, если:
                // 1. В ней стоит 1
                // 2. Сумма строки = 1
                // 3. Сумма столбца = 1
                if (mat[i][j] == 1 && rowSum[i] == 1 && colSum[j] == 1) {
                    specialCount++;
                }
            }
        }

        return specialCount;
    }
}
/*
Пример 1
Вход: mat = [[1,0,0],
             [0,0,1],
             [1,0,0]]
Выход: 1
Объяснение:
Позиция (1,2) - специальная:
- mat[1][2] = 1
- В строке 1: [0,0,1] - только одна 1
- В столбце 2: [0,1,0] - только одна 1

=====

Пример 2
Вход: mat = [[1,0,0],
             [0,1,0],
             [0,0,1]]
Выход: 3
Объяснение:
Все диагональные элементы специальные:
- Каждая позиция (i,i) содержит 1
- В каждой строке и столбце только одна 1
 */