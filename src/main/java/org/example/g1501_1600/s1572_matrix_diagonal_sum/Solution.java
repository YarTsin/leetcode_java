package org.example.g1501_1600.s1572_matrix_diagonal_sum;

// #Easy #Array #Matrix

/**
 * 1572. Matrix Diagonal Sum
 *
 * Дана квадратная матрица mat размером n × n.
 * Необходимо вычислить сумму всех элементов на обеих диагоналях матрицы.
 *
 * Важные уточнения:
 * Главная диагональ: элементы mat[i][i] где i от 0 до n-1
 * Побочная диагональ: элементы mat[i][n-1-i] где i от 0 до n-1
 * Если матрица имеет нечетный размер, центральный элемент учитывается
 * только один раз (он принадлежит обеим диагоналям)
 * (примеры внизу)
 *
 * Решение - в один проход - самое быстрое 0 ms
 *
 *
 */
class Solution {
    public int diagonalSum(int[][] mat) {
        int n = mat.length;
        int sum = 0;

        for (int i = 0; i < n; i++) {
            // Добавляем элемент главной диагонали
            sum += mat[i][i];
            // Добавляем элемент побочной диагонали
            sum += mat[i][n - 1 - i];
        }

        // Если матрица нечетного размера, вычитаем центральный элемент
        // (так как он был учтен дважды)
        if (n % 2 == 1) {
            sum -= mat[n / 2][n / 2];
        }

        return sum;
    }
}
/*
Пример 1
Вход: mat = [[1,2,3],
             [4,5,6],
             [7,8,9]]
Выход: 25
Объяснение:
Главная диагональ: 1 + 5 + 9 = 15
Побочная диагональ: 3 + 5 + 7 = 15
Сумма: 15 + 15 = 25
Центральный элемент 5 учитывается один раз

Пример 2
Вход: mat = [[1,1,1,1],
             [1,1,1,1],
             [1,1,1,1],
             [1,1,1,1]]
Выход: 8
Объяснение:
Главная диагональ: 1+1+1+1 = 4
Побочная диагональ: 1+1+1+1 = 4
Сумма: 4 + 4 = 8
 */