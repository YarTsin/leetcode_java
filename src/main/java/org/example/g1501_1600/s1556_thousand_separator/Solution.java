package org.example.g1501_1600.s1556_thousand_separator;

// #Easy #String

/**
 * 1556. Thousand Separator
 *
 * Дано целое число n. Необходимо добавить точку в качестве
 * разделителя тысяч и вернуть число в виде
 * строки с разделителями.
 * Правила форматирования:
 * Точки добавляются каждые три цифры справа налево
 * Если число меньше 1000, разделители не добавляются
 * Разделитель добавляется только между цифрами, не в начале или конце
 *
 * Пример 1
 * Вход: n = 987  * Выход: "987"
 * Объяснение: Число меньше 1000, разделитель не нужен.
 *
 * Пример 2
 * Вход: n = 1234 * Выход: "1.234"
 * Объяснение: Тысячи разделяются точкой.
 *
 * Пример 3
 * Вход: n = 123456789  * Выход: "123.456.789"
 * Объяснение: Несколько разделителей тысяч.
 *
 * Решение - обратный проход - самое быстрое решение - 0 ms
 *
 */
class Solution {
    public String thousandSeparator(int n) {
        // Обрабатываем случай с нулем
        if (n == 0) {
            return "0";
        }

        StringBuilder result = new StringBuilder();
        int digitCount = 0;

        // Обрабатываем число по цифрам справа налево
        while (n > 0) {
            int digit = n % 10; // Получаем последнюю цифру
            n /= 10; // Убираем последнюю цифру

            result.append(digit);
            digitCount++;

            // Добавляем точку после каждых трех цифр (кроме последней группы)
            if (digitCount % 3 == 0 && n > 0) {
                result.append('.');
            }
        }

        // Разворачиваем результат, так как добавляли цифры в обратном порядке
        return result.reverse().toString();
    }
}
