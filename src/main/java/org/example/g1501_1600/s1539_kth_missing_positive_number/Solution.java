package org.example.g1501_1600.s1539_kth_missing_positive_number;

// #Easy #Array #Binary_Search

/**
 * 1539. Kth Missing Positive Number
 *
 * Условие задачи:
 * Дан массив arr положительных целых чисел, отсортированный в строго
 * возрастающем порядке, и целое число k. Необходимо найти k-е пропущенное
 * положительное число в последовательности, начиная с 1.
 *
 * Определение:
 * Пропущенное число - это число, которое отсутствует в массиве,
 * но должно присутствовать в последовательности натуральных чисел.
 *
 * Пример 1
 * Вход: arr = [2,3,4,7,11], k = 5
 * Выход: 9
 * Объяснение:
 * Пропущенные числа: 1,5,6,8,9,10,12,13,...
 * 5-е пропущенное число - 9
 *
 * Пример 2
 * Вход: arr = [1,2,3,4], k = 2
 * Выход: 6
 * Объяснение:
 * Пропущенные числа: 5,6,7,8,9,10,11,12,13,14,15,...
 * 2-е пропущенное число - 6
 *
 * Пример 3
 * Вход: arr = [1,3,5,7,9], k = 3
 * Выход: 6
 * Объяснение:
 * Пропущенные числа: 2,4,6,8,10,...
 * 3-е пропущенное число - 6
 *
 * Оптимальное решение Бинарный поиск
 * Это самое быстрое решение - 0 ms
 */
class Solution {
    public int findKthPositive(int[] arr, int k) {
        int left = 0;
        int right = arr.length - 1;

        while (left <= right) {
            int mid = left + (right - left) / 2;

            // Количество пропущенных чисел до arr[mid]
            int missingCount = arr[mid] - (mid + 1);

            if (missingCount < k) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }

        // Формула для нахождения k-го пропущенного числа
        return left + k;
    }
}
