package org.example.g1501_1600.s1566_detect_pattern_of_length_m_repeated_k_or_more_times;

// #Easy #Array #Enumeration #Окно

import java.util.Arrays;

/**
 * 1566. Detect Pattern of Length M Repeated K or More Times
 *
 * Дан массив целых чисел arr и два целых числа m и k.
 * Необходимо определить, существует ли в массиве шаблон длины m,
 * который повторяется подряд k или более раз.
 *
 * Шаблон - это подмассив из m последовательных элементов.
 * Повторение означает, что тот же самый шаблон появляется
 * подряд k раз без перекрытия.
 *
 * Пример 1
 * Вход: arr = [1,2,4,4,4,4], m = 1, k = 3 * Выход: true
 * Объяснение: Шаблон [4] повторяется 4 раза подряд, что больше чем k=3.
 *
 * Пример 2
 * Вход: arr = [1,2,1,2,1,1,1,3], m = 2, k = 2 * Выход: true
 * Объяснение: Шаблон [1,2] повторяется 2 раза подряд (первые 4 элемента).
 *
 * Пример 3
 * Вход: arr = [1,2,1,2,1,3], m = 2, k = 3 * Выход: false
 * Объяснение: Шаблон [1,2] повторяется только 2 раза, затем следует [2,1] и [1,3].
 *
 * Пример 4
 * Вход: arr = [1,2,3,1,2], m = 2, k = 2 * Выход: false
 * Объяснение: Шаблон [1,2] появляется дважды, но не подряд.
 *
 * Решение - линейный проход - самое быстрое - 0 ms
 */
class Solution {
    public boolean containsPattern(int[] arr, int m, int k) {
        int count = 0;
        int n = arr.length;

        // Проходим по массиву, проверяя возможные начальные позиции
        for (int i = 0; i <= n - m * k; i++) {
            boolean patternFound = true;

            // Проверяем k повторений шаблона длины m
            for (int j = 0; j < m * k; j++) {
                if (arr[i + j] != arr[i + (j % m)]) {
                    patternFound = false;
                    break;
                }
            }

            if (patternFound) {
                return true;
            }
        }

        return false;
    }
}