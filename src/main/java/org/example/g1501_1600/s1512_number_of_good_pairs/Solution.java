package org.example.g1501_1600.s1512_number_of_good_pairs;

// #Easy #Array #Hash_Table #Math #Counting #Брут

import java.util.HashMap;
import java.util.Map;

/**
 * 1512. Number of Good Pairs
 * Дан массив целых чисел nums. Необходимо найти количество хороших пар.
 * Пара индексов (i, j) называется хорошей, если:
 * 0 <= i < j < nums.length
 * nums[i] == nums[j]
 * Другими словами, это количество пар индексов, где элементы равны,
 * и индекс i строго меньше индекса j.
 *
 * Решение - Использование HashMap для подсчета частот
 * 2-е решение по скорости - 1 ms
 *
 * Это решение является оптимальным по времени выполнения O(n)
 * и использует дополнительную память O(n).
 *
 */
class Solution {
    public int numIdenticalPairs(int[] nums) {
        // Создаем HashMap для подсчета частоты встречаемости каждого числа
        Map<Integer, Integer> frequencyMap = new HashMap<>();

        // Проходим по всем элементам массива и заполняем карту частот
        for (int num : nums) {
            // Метод getOrDefault возвращает текущее значение для ключа num,
            // или 0, если ключ отсутствует, и затем увеличивает его на 1
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
        }

        // Инициализируем счетчик хороших пар
        int goodPairsCount = 0;

        // Проходим по всем значениям частот в карте
        for (int count : frequencyMap.values()) {
            // Если число встречается больше 1 раза, вычисляем количество пар
            // которое можно из него сформировать по формуле: C(n, 2) = n * (n - 1) / 2
            if (count > 1) {
                goodPairsCount += (count * (count - 1)) / 2;
            }
        }

        // Возвращаем общее количество хороших пар
        return goodPairsCount;
    }
}
/*
Пример 1
Ввод: nums = [1,2,3,1,1,3]
Вывод: 4
Объяснение:
Индексы (0, 3): nums[0] == nums[3] (оба равны 1)
Индексы (0, 4): nums[0] == nums[4] (оба равны 1)
Индексы (3, 4): nums[3] == nums[4] (оба равны 1)
Индексы (2, 5): nums[2] == nums[5] (оба равны 3)
Всего 4 хорошие пары.

Пример 2
Ввод: nums = [1,1,1,1]
Вывод: 6
Объяснение:
Каждая пара индексов (i, j) (где i < j) является хорошей.
Всего таких пар: (0,1), (0,2), (0,3), (1,2), (1,3), (2,3) = 6 пар.

Пример 3
Ввод: nums = [1,2,3]
Вывод: 0
Объяснение: В массиве нет равных элементов, поэтому хороших пар нет.
 */